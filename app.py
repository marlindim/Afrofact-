import streamlit as st
import wikipedia
import os
from dotenv import load_dotenv
# from openai import OpenAI
from fpdf import FPDF
import base64
from groq import Groq

# ========== LOAD ENV VARS ==========
load_dotenv()

# ========== INIT OPENAI/GROQ CLIENT ‚Äî CLEAN, NO PROXY ==========

api_key = os.getenv("GROQ_API_KEY")


if not api_key:
    st.error("üö®  API key not found. Please set it in .env file.")
    st.stop()

# client = OpenAI(api_key=api_key)  
client = Groq(api_key=api_key)
# ========== CONFIG ==========
st.set_page_config(page_title="AfroFacts / Wetin Happen?", page_icon="üá≥üá¨", layout="centered")

# ========== TITLE & INTRO ==========
st.title("AfroFacts")
st.markdown("### Type a Nigerian place, person, or event ‚Üí Get the TRUE story told like Nollywood üé¨")
st.caption("No fiction. Just facts‚Ä¶ with flavor. Made with ‚ù§Ô∏è for Nigerian history.")

# ========== INPUT ==========
user_input = st.text_input("Enter a Nigerian town, person, or landmark (e.g., 'Osun', 'Olumo Rock', 'Ibadan'):", "")

# ========== HELPER: FETCH WIKI FACTS ==========
def get_wiki_facts(query, sentences=3):
    try:
        enhanced_query = f"{query} Nigeria"
        page = wikipedia.page(enhanced_query, auto_suggest=True)
        summary = wikipedia.summary(enhanced_query, sentences=sentences, auto_suggest=True)
        return summary, page.url
    except Exception as e:
        return f"Sorry, no solid facts found for '{query}'. Try another name or check spelling.", ""

# ========== HELPER: GPT STORY REWRITER ==========
def generate_naija_story(facts, topic):
    prompt = f"""
You are a Nigerian history storyteller. Your job is to take real historical facts about "{topic}" and retell them as a gripping, emotional, 200-350 word story ‚Äî like a Nollywood trailer, viral Twitter thread, or village moonlight tale.

Use Nigerian flavor: sprinkle in humor, proverbs, or local references. End with a punchy, memorable line. DO NOT invent fiction ‚Äî only repackage truth, add other nigerian cultural elements and languages.

FACTS TO USE:
{facts}

OUTPUT FORMAT:
- No headings or labels
- Just the story text
- Include 1-2 emojis if natural
- Hashtag at the end: #WetinHappen or #AfroFacts
"""
    
    
    try:
        response = client.chat.completions.create(
            model="llama-3.3-70b-versatile",
            messages=[
                {"role": "system", "content": "You are a master Nigerian griot and history dramatizer."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.75,
            max_tokens=250
        )
        story = response.choices[0].message.content.strip()
        return story
    except Exception as e:
        return f"Story engine down üòÖ Try again or check groq key. Error: {str(e)}"

# ========== HELPER: GENERATE IMAGE (DALL¬∑E 3) ==========
def generate_story_image(topic):
    prompt = f"Nigerian art style, dramatic scene from the history of {topic}, vibrant colors, cultural symbols, no text, cinematic, folklore illustration"
    try:
        response = client.images.generate(
            model="llama-3.3-70b-versatile",
            prompt=prompt,
            size="1024x1024",
            quality="standard",
            n=1,
        )
        return response.data[0].url
    except Exception as e:
        return ""

# ========== HELPER: DOWNLOAD PDF ==========
def create_download_pdf(story, topic):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", "B", 16)
    pdf.cell(0, 10, f"Wetin Happen? ‚Äî {topic}", ln=True, align="C")
    pdf.ln(10)
    pdf.set_font("Arial", size=12)
    pdf.multi_cell(0, 10, story)
    pdf.ln(10)
    pdf.set_font("Arial", "I", 10)
    pdf.cell(0, 10, "Generated by AfroFacts AI ‚Äî Preserve Naija History", ln=True, align="C")

    return pdf.output(dest="S").encode("latin1")

# ========== MAIN LOGIC ==========
if user_input:
    with st.spinner("üîç Digging up true Naija facts..."):
        facts, source_url = get_wiki_facts(user_input)

    if "Sorry, no solid facts" not in facts:
        with st.spinner("üé¨ Turning facts into blockbuster story..."):
            story = generate_naija_story(facts, user_input)

        st.success("‚úÖ Story Ready!")
        st.markdown("### üìñ Your Story:")
        st.write(story)

        # ========== IMAGE GENERATION (OPTIONAL) ==========
        # if st.button("üñºÔ∏è Generate Naija-Style Image (DALL¬∑E)"):
        #     with st.spinner("üé® Creating image... (may take 10-20 sec)"):
        #         image_url = generate_story_image(user_input)
        #         if image_url:
        #             st.image(image_url, caption=f"AI-generated scene from {user_input}", use_column_width=True)
        #         else:
        #             st.error("Image generation failed. Try again or check OpenAI key.")

        # # ========== DOWNLOAD BUTTON ==========
        # pdf_bytes = create_download_pdf(story, user_input)
        # b64 = base64.b64encode(pdf_bytes).decode()
        # href = f'<a href="application/pdf;base64,{b64}" download="WetinHappen_{user_input.replace(" ", "_")}.pdf">üì• Download Story as PDF</a>'
        # st.markdown(href, unsafe_allow_html=True)

        # ========== TOGGLE: SHOW SOURCES ==========
        with st.expander("üîç Show True Sources (For Teachers & Nerds üòâ)"):
            st.write("**Raw Facts from Wikipedia:**")
            st.write(facts)
            st.markdown(f"**Source:** [{source_url}]({source_url})")

    else:
        st.error(facts)

# ========== FOOTER ==========
st.markdown("---")
st.caption("Reviving history, one AI story at a time. üá≥üá¨")
st.caption("AfroFacts ‚Äî Wetin Happen for Your Village?")